/* -----------------------------------------------------------------------------
  Filename:    ccl_par.h
  Description: Toolversion: 03.20.21.01.10.02.79.00.00.00
               
               Serial Number: CBD1100279
               Customer Info: Dr. Ing. h. c. F. Porsche AG
                              CBD / Porsche 2007+
                              Texas Instruments TMS470 / TMS470 R1SF55
                              Texas Instruments 4.6.6 Compiler
               
               
               Generator Fwk   : GENy 
               Generator Module: Ccl__core
               
               Configuration   : F:\projects\ADR-Porsche\Porsche_ADR_Development_trunk\MOD\MOD_CAN_GEN\cfg\Porsche_ADR.gny
               
               ECU: 
                       TargetSystem: Hw_Tms470Cpu
                       Compiler:     TexasInstruments
                       Derivates:    TMS470R1
               
               Channel "Channel0":
                       Databasefile: F:\projects\ADR-Porsche\Porsche_ADR_Development_trunk\MOD\MOD_CAN_GEN\cfg\CAN_Matrix_Dashboard_2_11_0_X2_Release.dbc
                       Bussystem:    CAN
                       Manufacturer: Porsche AG
                       Node:         ADR_PAG_X2

  Generated by , 2012-02-15  08:51:07
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2010 by Vector Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vector Informatik 
  GmbH.
  
  Vector Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vector Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__CCL_PAR_H__)
#define __CCL_PAR_H__

/******************************************************************************/
/* Include files                                                              */
/******************************************************************************/
#include "v_cfg.h"
#include "v_def.h"
#include "can_inc.h"
#include "ccl_inc.h"

/******************************************************************************/
/* Defines                                                                    */
/******************************************************************************/
#ifndef NM_OK
  #define NM_OK 0
#endif


#define CCL_USE_REQUEST_SETEXTCOM_FCT /* SetExtComRequest routines are enabled in the CCL module */ 

#define CCL_USE_REQUEST_SETINTCOM_FCT /* SetIntComRequest routines are enabled in the CCL module */ 

#define CCL_USE_REQUEST_CLEARCOM_FCT /* ClearComRequest routines are enabled in the CCL module */ 

#define CCL_DISABLE_WAKEUP_EV

#define CCL_DISABLE_SLEEP_COND

#define CCL_DISABLE_STOP_TIMEOUT


V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclNmWakeUpAble;
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclNmType[1];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclStartIndex[1];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclStopIndex[1];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclUserOffset[4];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclUserMask[4];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclUserChannel[4];

V_MEMROM0 extern V_MEMROM1 vuint16 V_MEMROM2 cclNpmMsgTimeoutValue[1];
V_MEMROM0 extern V_MEMROM1 vuint16 V_MEMROM2 cclNmStartupTimerValue[1];

V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclNpmPwuLevel[1];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclNpmFsLevel[1];
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 cclNpmEcuAddress[1];
/*** prototypes ***/
extern void CclInitPowerOnFct(const tCclNmInitParaListType* nmInitPara);
extern void CclInitFct(const tCclNmInitParaListType* nmInitPara);
extern void CclSystemStartupFct(void);
extern void CclSystemShutdownFct(void);
extern void CclNmSleepReqFct(vuint8 network);
extern vuint8 CclNmActiveReqFct(vuint8 network);
extern void CclNmPrepareSleepReqFct(void);
extern void CclInitTrcvFct(void);
extern void CclWakeUpTrcvFct(void);
extern void CclSleepTrcvFct(void);
extern void CclExtCanComReqFct(void);
extern void CclIntComReqFct(void);
extern void CclComRelFct(void);

extern void CCL_API_CALLBACK_TYPE ApplCclNetworkWakeup(void);
extern void CCL_API_CALLBACK_TYPE ApplCclLocalWakeup(void);
extern void CCL_API_CALLBACK_TYPE ApplCclSleep(void);


/* begin Fileversion check */
#ifndef SKIP_MAGIC_NUMBER
#ifdef MAGIC_NUMBER
  #if MAGIC_NUMBER != 88863978
      #error "The magic number of the generated file <F:\projects\ADR-Porsche\Porsche_ADR_Development_trunk\MOD\MOD_CAN_GEN\inc\ccl_par.h> is different. Please check time and date of generated files!"
  #endif
#else
  #define MAGIC_NUMBER 88863978
#endif  /* MAGIC_NUMBER */
#endif  /* SKIP_MAGIC_NUMBER */

/* end Fileversion check */

#endif /* __CCL_PAR_H__ */
